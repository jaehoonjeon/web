가피 

back-end 쪽에서 처리하는 로직이 많지 않다
- 외부 dll을 참조해야 하는 상황 (가상계좌, 카드결제업무)
- 발매, 환불 로직(com+ 사용)
- 그외 대부분은 ajax 호출에 대한 json 데이터 리턴 형태


- com+ 업데이트 부담감


------------------------------------------------------------

▶ java spring 
컴파일된 언어로써 인터프리터 언어보다 빠르다 (jvm)
국내시장 점유율
신정산, 지원팀과 같은 개발환경
안정성

설정이 복잡한 편
개발자가 프레임워크에 이해도가 낮으면 복붙식의 개발

------------------------------------------------------------

▶ python django, flask
파이썬을 사용함으로써 생산성 증가
다양하고 강력한 라이브러리가 많다
기본 admin 페이지 제공(django)
인증, 관리와 같이 거의 대부분의 사이트에서 사용하는 기능들이 기본 모듈로 제공(django)
Django Debug Toolbar란 툴을 이용 디버깅이 쉬움

typeless 언어
인터프리터 언어로써 생기는 문제점
한글 자료가 부족

django vs flask
https://testdriven.io/blog/django-vs-flask/

------------------------------------------------------------

▶ node js
구글 V8 엔진으로 가동 javascript 로 개발 가능 
코드가 매우 짧고 쉬움
방대한 모듈 제공(NPM)
Non-blocking I/O (비동기 처리)

인터프리터 언어로써 생기는 문제점
단일 쓰레드이기 때문에 하나의 작업 자체가 많이 걸리는 웹서비스에는 어울리지 않다
이벤트 기반 비동기방식이라 서버단 로직이 복잡한 경우 콜백함수의 늪에 빠질 수 있다

------------------------------------------------------------
RDB 서비스에 사용할 프레임워크 고르기 ( Springboot, Django )
medium.com/jswoo030/rdb-서비스에-사용할-프레임워크-고르기-springboot-django-c844e1a048c

Spring vs Django 프레임워크 비교
blog.naver.com/sknglee22/221926650002